<div class="row">
    <div class = "col">
        <h1>지역검색</h1>
                <!---검색폼-->
                <div class="row mb-5 justify-content-end">
                    <form name="frm" class="col-6 col-md-4 col-lg-3">
                        <div class="input-group">
                            <input name="query" class="form-control" value="인하대학교">
                            <button class="btn btn-primary">검색</button>
                        </div>
                    </form>
                </div>
            <div id="div_locals"></div>
            <div class="text-center">
                <button id="prev" class="btn btn-primary">이전</button>
                <span id="span_page" class="mx-3">1/10</span>
                <button id="next" class="btn btn-primary">다음</button>
            </div>
            <!--지도출력-->
            <div id="map" style="width:100%;height:400px;" class="my-5"></div> 
    </div>
</div>
<!--템플릿-->
<script type="x-handlebars-template" id="temp_locals">
    <table class="table table-striped">
        {{#each documents}}
        <tr>
            <td>{{place_name}}</td>
            <td>{{address_name}}</td>
            <td>{{phone}}</td>
            <td><button class="btn btn-primary location" x="{{x}}" y="{{y}}"">위치보기</button></td>
            <td><button class="btn btn-primary btn-sm favorite" local="{{toString @this}}">즐겨찾기</button></td>
        </tr>
        {{/each}}
    </table>
</script>
<script>
    Handlebars.registerHelper("toString",function(local){ //위에 즐겨찾기 td에 toString과 this에 local
        return JSON.stringify(local);
    });
</script>

<script type="module">
    import {app} from "/javascripts/firebase.js";
    import { getDatabase, ref, set, get} from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js";
    const db=getDatabase(app)

    let query=$(frm.query).val();
    let page = 1;
    let size = 5;
    getLocals();

    //즐겨찾기 버튼을 누른 경우
    $("#div_locals").on("click",".favorite",async function(){ //async를 통해 아래 await을 사용할 수 있게 댐, 안쓸시 await을 못씀
        //alert(".."); //확인용
        if(sessionStorage.getItem("email")){
            const local=JSON.parse($(this).attr("local"));
            console.log(local);
            const ref_favorite=ref(db,`favorite/${sessionStorage.getItem("uid")}/${local.id}`);
            const snapshot = await get(ref_favorite);
            //console.log(snapshot.val());
            if(snapshot.val()){
                alert("즐겨찾기에 이미 등록되었습니다.");
            }else{
                await set(ref_favorite, local);
                alert("등록되었습니다.");
            }
        }else{
            sessionStorage.setItem("target","/locals")
            location.href="/users/login";
        }
    });
    // 위치보기 버튼을 클릭한경우
    $("#div_locals").on("click", "button",function(){
        let x=$(this).attr("x");
        let y=$(this).attr("y");
        var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
        var options = { //지도를 생성할 때 필요한 기본 옵션
	        center: new kakao.maps.LatLng(y, x), //지도의 중심좌표.
	        level: 3 //지도의 레벨(확대, 축소 정도) 
		};

		var map = new kakao.maps.Map(container, options);
        var markerPosition  = new kakao.maps.LatLng(y, x);  // 마커가 표시될 위치입니다 
        var marker = new kakao.maps.Marker({  // 마커를 생성합니다
            position: markerPosition
        });
        marker.setMap(map);  // 마커가 지도 위에 표시되도록 설정합니다
    })
    
    getLocals();
    $(frm).on("submit",function(e){
        e.preventDefault();
        query=$(frm.query).val();
        page=1;
        getLocals();
    });

    $("#prev").on("click", function(){
        page--;
        getLocals();
    });

    $("#next").on("click", function(){
        page++;
        getLocals();
    });

    function getLocals(){
        $.ajax({
            type:"get",
            url:"https://dapi.kakao.com/v2/local/search/keyword.json",
            headers:{"Authorization": "KakaoAK 91f693e0fd02defa46dbea4eb5d685a9"},
            data:{query:query,page:page, size:size},
            success:function(data){
                console.log(data);
                let temp = Handlebars.compile($("#temp_locals").html());
                let html = temp(data);
                $("#div_locals").html(html);

                let last = Math.ceil(data.meta.pageable_count/size);
                $("#span_page").html(page + "/" + last);

                if(page==1) $("#prev").attr("disabled", true)
                else $("#prev").attr("disabled", false);

                if(data.meta.is_end) $("#next").attr("disabled", true)
                else $("#next").attr("disabled", false);
            }
        })
    }
</script>